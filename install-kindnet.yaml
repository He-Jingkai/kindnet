---
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: psp.kindnet.unprivileged
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
    apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
    apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
spec:
  privileged: false
  volumes:
    - configMap
    - secret
    - emptyDir
    - hostPath
  allowedHostPaths:
    - pathPrefix: "/etc/cni/net.d"
    - pathPrefix: "/opt/cni/bin"
  readOnlyRootFilesystem: false
  # Users and groups
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  # Privilege Escalation
  allowPrivilegeEscalation: false
  defaultAllowPrivilegeEscalation: false
  # Capabilities
  allowedCapabilities: ['NET_ADMIN']
  defaultAddCapabilities: []
  requiredDropCapabilities: []
  # Host namespaces
  hostPID: false
  hostIPC: false
  hostNetwork: true
  hostPorts:
  - min: 0
    max: 65535
  # SELinux
  seLinux:
    rule: 'RunAsAny'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kindnet
rules:
  - apiGroups: ['extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames: ['psp.kindnet.unprivileged']
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kindnet
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kindnet
subjects:
- kind: ServiceAccount
  name: kindnet
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kindnet
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kindnet-cfg
  namespace: kube-system
  labels:
    tier: node
    app: kindnet
data:
  cni-conf.json: |
    {
      "cniVersion": "0.3.1",
      "name": "kindOfBridge",
      "plugins": [
        {
          "type": "bridge",
          "bridge": "kind0",
          "capabilities": {"ipRanges": true},
          "isGateway": true,
          "hairpinMode": true,
          "ipMasq": false,
          "ipam": {
            "type": "host-local",
            "routes": [
              {"dst": "0.0.0.0/0"},
              {"dst": "::/0"}
            ]
          }
        },
        {
          "type": "portmap",
          "capabilities": {"portMappings": true},
          "snat": false
        }
      ]
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kindnet-ds
  namespace: kube-system
  labels:
    tier: node
    app: kindnet 
spec:
  template:
    metadata:
      labels:
        tier: node
        app: kindnet
    spec:
      hostNetwork: true
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: kindnet
      initContainers:
      - name: install-cni-bin
        image: busybox
        command: ['sh', '-c', 'wget -qO-
        https://github.com/containernetworking/plugins/releases/download/v0.7.4/cni-plugins-amd64-v0.7.4.tgz
        | tar -C /opt/cni/bin -xvzf -']
        volumeMounts:
        - name: cni-bin
          mountPath: /opt/cni/bin
      - name: install-cni-cfg
        image: busybox
        command: ["cp"]
        args: ["-f", "/kind/kube-kindnet/cni-conf.json", "/etc/cni/net.d/10-kindnet.conflist"]
        volumeMounts:
        - name: cni-cfg
          mountPath: /etc/cni/net.d
        - name: kindnet-cfg
          mountPath: /kind/kube-kindnet/
      containers:
      - name: kindnet-cni
        image: aojea/kindnet
        env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: false
          capabilities:
             add: ["NET_ADMIN"]
      volumes:
        - name: cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: cni-cfg
          hostPath:
            path: /etc/cni/net.d
        - name: kindnet-cfg
          configMap:
            name: kindnet-cfg
---
